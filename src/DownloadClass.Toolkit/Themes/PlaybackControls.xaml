<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:iconpacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:behaviros="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:customeBehaviors="clr-namespace:DownloadClass.Toolkit.Behaviros"
                    xmlns:controls="clr-namespace:DownloadClass.Toolkit.Controls"
                    xmlns:converters="clr-namespace:DownloadClass.Toolkit.Converters"
                    xmlns:system="clr-namespace:System;assembly=System.Runtime">
    <converters:TimeSpanToDoubleConverter x:Key="TimeSpanToDoubleConverter" />
    <converters:DoubleToTimeStringConverter x:Key="DoubleToTimeStringConverter" />

    <Style x:Key="SeekBarSliderIncrementRepeatButtonStyle"
           TargetType="RepeatButton">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Background="#666666" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SeekBarSliderDecrementRepeatButtonStyle"
           TargetType="RepeatButton">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Background="#0A8CE0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumbStyle"
           TargetType="Thumb">
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="OverridesDefaultStyle"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Ellipse Width="{TemplateBinding Width}"
                             Height="{TemplateBinding Height}"
                             Fill="White">
                        <Ellipse.Effect>
                            <DropShadowEffect Color="#02141F"
                                              Opacity="0.2"
                                              BlurRadius="8" />
                        </Ellipse.Effect>
                    </Ellipse>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SeekBarSliderStyle"
           TargetType="controls:SeekBarSlider">
        <Setter Property="AutoToolTipPlacement"
                Value="TopLeft" />
        <Setter Property="IsMoveToPointEnabled"
                Value="True" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Panel.ZIndex"
                Value="1" />
        <Setter Property="Orientation"
                Value="Horizontal" />
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Horizontal">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Slider">
                            <Track x:Name="PART_Track"
                                   Margin="0,-6,0,-6"
                                   Orientation="{TemplateBinding Orientation}">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SeekBarSliderDecrementRepeatButtonStyle}"
                                                  Command="Slider.DecreaseLarge"
                                                  Height="8" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SeekBarSliderIncrementRepeatButtonStyle}"
                                                  Command="Slider.IncreaseLarge"
                                                  Height="8" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource SliderThumbStyle}"
                                           Width="20"
                                           Height="20"
                                           Tag="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                        <Thumb.ToolTip>
                                            <ToolTip Placement="Top"
                                                     IsOpen="True"
                                                     StaysOpen="True"
                                                     DataContext="{Binding RelativeSource={RelativeSource Mode=Self},Path=PlacementTarget.Tag}">
                                                <TextBlock Text="{Binding Path=Value,Converter={StaticResource DoubleToTimeStringConverter}}" />
                                            </ToolTip>
                                        </Thumb.ToolTip>
                                    </Thumb>
                                </Track.Thumb>
                            </Track>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="VolumeSliderIncrementRepeatButtonStyle"
           TargetType="RepeatButton">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border CornerRadius="3.5,3.5,0,0"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Background="#666666" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VolumeSliderDecrementRepeatButtonStyle"
           TargetType="RepeatButton">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Background="#0A8CE0"
                            CornerRadius="0,0,3.5,3.5" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VolumeSliderStyle"
           TargetType="Slider">
        <Setter Property="IsMoveToPointEnabled"
                Value="True" />
        <Setter Property="AutoToolTipPlacement"
                Value="BottomRight" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Panel.ZIndex"
                Value="1" />
        <Setter Property="Orientation"
                Value="Vertical" />
        <Setter Property="Minimum"
                Value="0" />
        <Setter Property="Maximum"
                Value="100" />
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Vertical">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Slider">
                            <Grid>
                                <Track x:Name="PART_Track"
                                       Orientation="{TemplateBinding Orientation}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource VolumeSliderDecrementRepeatButtonStyle}"
                                                      Command="Slider.DecreaseLarge"
                                                      Width="8" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource SliderThumbStyle}"
                                               Width="12"
                                               Height="12"
                                               Tag="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                            <Thumb.ToolTip>
                                                <ToolTip Placement="Top"
                                                         IsOpen="True"
                                                         StaysOpen="True"
                                                         DataContext="{Binding RelativeSource={RelativeSource Mode=Self},Path=PlacementTarget.Tag}">
                                                    <TextBlock Text="{Binding Path=Value}" />
                                                </ToolTip>
                                            </Thumb.ToolTip>
                                        </Thumb>
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource VolumeSliderIncrementRepeatButtonStyle}"
                                                      Command="Slider.IncreaseLarge"
                                                      Width="8" />
                                    </Track.IncreaseRepeatButton>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="IconBaseStyle"
           TargetType="iconpacks:PackIconMaterial">
        <Setter Property="FontSize"
                Value="16" />
    </Style>

    <Style x:Key="IconButtonBaseStyle"
           TargetType="Button">
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Background"
                Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Foreground"
                        Value="White" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="False">
                <Setter Property="Foreground"
                        Value="#666666" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="IconToggleButtonBaseStyle"
           TargetType="ToggleButton">
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Background"
                Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Foreground"
                        Value="White" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="False">
                <Setter Property="Foreground"
                        Value="#666666" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PlayPauseToggleButtonStyle"
           TargetType="ToggleButton"
           BasedOn="{StaticResource IconToggleButtonBaseStyle}">
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}">
                        <iconpacks:PackIconMaterial HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    x:Name="Icon"
                                                    Style="{StaticResource IconBaseStyle}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="False">
                            <Setter TargetName="Icon"
                                    Property="Kind"
                                    Value="Play" />
                            <Setter Property="ToolTip"
                                    Value="播放" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="Icon"
                                    Property="Kind"
                                    Value="Pause" />
                            <Setter Property="ToolTip"
                                    Value="暂停" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PrevButtonStyle"
           TargetType="Button"
           BasedOn="{StaticResource IconButtonBaseStyle}">
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="ToolTip"
                Value="上一个" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <iconpacks:PackIconMaterial HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    Kind="SkipPrevious"
                                                    Style="{StaticResource IconBaseStyle}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NextButtonStyle"
           TargetType="Button"
           BasedOn="{StaticResource IconButtonBaseStyle}">
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="ToolTip"
                Value="下一个" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <iconpacks:PackIconMaterial HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    Kind="SkipNext"
                                                    Style="{StaticResource IconBaseStyle}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TimeTextBlockStyle"
           TargetType="TextBlock">
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Opacity="0.5"
                                 Color="White" />
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize"
                Value="16" />
    </Style>

    <Style x:Key="SpeedRatioToggleButton"
           TargetType="ToggleButton">
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border CornerRadius="12"
                            Background="{TemplateBinding Background}"
                            Padding="12,4">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="White" />
                <Setter Property="Foreground"
                        Value="#333333" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="False">
                <Setter Property="Background"
                        Value="#666666" />
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="White"
                                         Opacity="0.4" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SpeedRatioComboBoxStyle"
           TargetType="ComboBox">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Width"
                            Value="72" />
                    <Setter Property="Height"
                            Value="40" />
                    <Setter Property="HorizontalContentAlignment"
                            Value="Center" />
                    <Setter Property="VerticalContentAlignment"
                            Value="Center" />
                    <Setter Property="FontSize"
                            Value="14" />
                    <Setter Property="Foreground"
                            Value="#666666" />
                    <Setter Property="BorderBrush">
                        <Setter.Value>
                            <SolidColorBrush Color="White"
                                             Opacity="0.2" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness"
                            Value="0,1,0,0" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter Property="Foreground"
                                    Value="#0A8CE0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Foreground"
                                    Value="White" />
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#D8D8D8"
                                                     Opacity="0.1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex"
                                 Value="0">
                            <Setter Property="BorderThickness"
                                    Value="0,0,0,1" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding StringFormat={}{0:0.0}}" />
                        <TextBlock Text=" X" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid x:Name="SpeedRatioPanel">
                        <ToggleButton Style="{StaticResource SpeedRatioToggleButton}">
                            <ContentPresenter Content="{TemplateBinding SelectedValue}"
                                              ContentTemplate="{TemplateBinding ItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
                        </ToggleButton>
                        <Popup x:Name="PART_Popup"
                               Placement="Top"
                               StaysOpen="True"
                               HorizontalOffset="-11"
                               VerticalOffset="-16"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               PopupAnimation="Slide"
                               AllowsTransparency="True">
                            <Grid>
                                <Border Width="72"
                                        CornerRadius="4">
                                    <Border.Background>
                                        <SolidColorBrush Color="Black"
                                                         Opacity="0.7" />
                                    </Border.Background>
                                    <Border.Effect>
                                        <BlurEffect Radius="0" />
                                    </Border.Effect>
                                </Border>
                                <Border Width="72"
                                        CornerRadius="4">
                                    <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Contained" />
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="SpeedRatioPanel"
                                 Property="IsMouseOver"
                                 Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="OpenPopupStoryBoard">
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="PART_Popup"
                                                                        Storyboard.TargetProperty="IsOpen"
                                                                        FillBehavior="HoldEnd">
                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0.25"
                                                                     Value="True" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <PauseStoryboard BeginStoryboardName="OpenPopupStoryBoard" />
                                <BeginStoryboard x:Name="ClosePopupStoryBoard">
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="PART_Popup"
                                                                        Storyboard.TargetProperty="IsOpen"
                                                                        FillBehavior="HoldEnd">
                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0.25"
                                                                     Value="False" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger SourceName="SpeedRatioPanel"
                                 Property="IsMouseOver"
                                 Value="False">
                            <Setter TargetName="PART_Popup"
                                    Property="IsOpen"
                                    Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuStyle"
           TargetType="Menu">
        <Setter Property="Width"
                Value="72" />
        <Setter Property="Height"
                Value="85" />
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Assets/LectureMenu_Background.png" />
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="MenuItem">
                    <Setter Property="Width"
                            Value="72" />
                    <Setter Property="Height"
                            Value="42" />
                    <Setter Property="HorizontalContentAlignment"
                            Value="Center" />
                    <Setter Property="VerticalContentAlignment"
                            Value="Center" />
                    <Setter Property="FontSize"
                            Value="14" />
                    <Setter Property="Foreground"
                            Value="White" />
                    <Style.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter Property="Foreground"
                                    Value="#0A8CE0" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VolumeToggleButtonStyle"
           TargetType="ToggleButton"
           BasedOn="{StaticResource IconToggleButtonBaseStyle}">
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding  Background}"
                            ToolTip="切换静音">
                        <iconpacks:PackIconMaterial x:Name="Icon"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                                    Style="{StaticResource IconBaseStyle}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="Icon"
                                    Property="Kind"
                                    Value="VolumeOff" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="False">
                            <Setter TargetName="Icon"
                                    Property="Kind"
                                    Value="VolumeHigh" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FullscreenToggleButtonStyle"
           TargetType="ToggleButton"
           BasedOn="{StaticResource IconToggleButtonBaseStyle}">
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding  Background}">
                        <iconpacks:PackIconMaterial HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    x:Name="Icon"
                                                    Style="{StaticResource IconBaseStyle}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="Icon"
                                    Property="Kind"
                                    Value="FullscreenExit" />
                            <Setter Property="ToolTip"
                                    Value="退出全屏" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="False">
                            <Setter TargetName="Icon"
                                    Property="Kind"
                                    Value="Fullscreen" />
                            <Setter Property="ToolTip"
                                    Value="全屏" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TopmostToggleButtonStyle"
           TargetType="ToggleButton">
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="12"
                            Padding="12,4">
                        <StackPanel Orientation="Horizontal"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                            <iconpacks:PackIconMaterial x:Name="Icon"
                                                        Margin="0,0,2,0"
                                                        Kind="CloseCircleOutline" />
                            <TextBlock Text="置顶" />
                        </StackPanel>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="False">
                            <Setter TargetName="Icon"
                                    Property="Kind"
                                    Value="CloseCircleOutline" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="Icon"
                                    Property="Kind"
                                    Value="CheckboxMarkedCircleOutline" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="White" />
                <Setter Property="Foreground"
                        Value="#333333" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="False">
                <Setter Property="Background"
                        Value="#666666" />
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="White"
                                         Opacity="0.5" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="controls:PlaybackControls">
        <Setter Property="Panel.ZIndex"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:PlaybackControls">
                    <StackPanel Orientation="Vertical">
                        <controls:SeekBarSlider x:Name="SeekBarSlider"
                                                Style="{StaticResource SeekBarSliderStyle}"
                                                Minimum="0"
                                                Maximum="{TemplateBinding Length,Converter={StaticResource TimeSpanToDoubleConverter}}"
                                                Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Position,Mode=TwoWay,Converter={StaticResource TimeSpanToDoubleConverter}}">
                            <behaviros:Interaction.Behaviors>
                                <customeBehaviors:ShowTickValueBehavior FormatType="TimeSpan" />
                            </behaviros:Interaction.Behaviors>
                        </controls:SeekBarSlider>
                        <Border Height="55"
                                Padding="26,0,26,0">
                            <Border.Background>
                                <SolidColorBrush Color="#1F2C34"
                                                 Opacity="0.5" />
                            </Border.Background>
                            <DockPanel VerticalAlignment="Center"
                                       HorizontalAlignment="Stretch">
                                <StackPanel Orientation="Horizontal"
                                            DockPanel.Dock="Left">
                                    <Button Style="{StaticResource PrevButtonStyle}"
                                            Visibility="Collapsed" />
                                    <ToggleButton Style="{StaticResource PlayPauseToggleButtonStyle}"
                                                  IsChecked="{Binding  RelativeSource={RelativeSource Mode=TemplatedParent},Path=IsPlaying,Mode=TwoWay}" />
                                    <Button Style="{StaticResource NextButtonStyle}"
                                            Visibility="Collapsed" />
                                    <Border Margin="20,0,0,0">
                                        <TextBlock Style="{StaticResource TimeTextBlockStyle}"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center">
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat="{}{0:hh\:mm\:ss} / {1:hh\:mm\:ss}">
                                                    <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}"
                                                             Path="Position" />
                                                    <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}"
                                                             Path="Length" />
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </Border>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal"
                                            HorizontalAlignment="Right"
                                            DockPanel.Dock="Right">
                                    <ContentPresenter />
                                    <ToggleButton IsChecked="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Topmost}"
                                                  Style="{StaticResource TopmostToggleButtonStyle}" />
                                    <ComboBox Style="{StaticResource SpeedRatioComboBoxStyle}"
                                              Margin="16,0,0,0"
                                              SelectedValue="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=SpeedRatio,Mode=TwoWay}">
                                        <system:Double>0.8</system:Double>
                                        <system:Double>1.0</system:Double>
                                        <system:Double>1.2</system:Double>
                                        <system:Double>1.3</system:Double>
                                        <system:Double>1.5</system:Double>
                                        <system:Double>1.8</system:Double>
                                        <system:Double>2.0</system:Double>
                                    </ComboBox>
                                    <ToggleButton IsChecked="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=IsFullScreen,Mode=TwoWay}"
                                                  Style="{StaticResource FullscreenToggleButtonStyle}"
                                                  Margin="16,0,0,0">
                                        <behaviros:Interaction.Behaviors>
                                            <customeBehaviors:AutoCollapsedBehavior />
                                        </behaviros:Interaction.Behaviors>
                                    </ToggleButton>
                                    <Grid x:Name="VolumePanel">
                                        <ToggleButton IsChecked="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=IsMuted,Mode=TwoWay}"
                                                      Style="{StaticResource VolumeToggleButtonStyle}"
                                                      Margin="16,0,0,0">
                                        </ToggleButton>
                                        <Popup x:Name="VolumePopup"
                                               Placement="Top"
                                               StaysOpen="True"
                                               HorizontalOffset="-11"
                                               VerticalOffset="-16"
                                               PopupAnimation="Slide"
                                               AllowsTransparency="True">
                                            <Grid>
                                                <Border Width="70"
                                                        Height="160"
                                                        CornerRadius="4"
                                                        Padding="0,16">
                                                    <Border.Background>
                                                        <SolidColorBrush Color="Black"
                                                                         Opacity="0.7" />
                                                    </Border.Background>
                                                    <Border.Effect>
                                                        <BlurEffect />
                                                    </Border.Effect>
                                                </Border>
                                                <Border Width="70"
                                                        Height="160"
                                                        CornerRadius="4"
                                                        Padding="0,16">
                                                    <Slider Style="{StaticResource VolumeSliderStyle}"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Stretch"
                                                            Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Volume,Mode=TwoWay}">
                                                    </Slider>
                                                </Border>
                                            </Grid>
                                        </Popup>
                                    </Grid>
                                </StackPanel>
                            </DockPanel>
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="VolumePanel"
                                 Property="IsMouseOver"
                                 Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="OpenPopupStoryBoard">
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="VolumePopup"
                                                                        Storyboard.TargetProperty="IsOpen"
                                                                        FillBehavior="HoldEnd">
                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0.25"
                                                                     Value="True" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <PauseStoryboard BeginStoryboardName="OpenPopupStoryBoard" />
                                <BeginStoryboard x:Name="ClosePopupStoryBoard">
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="VolumePopup"
                                                                        Storyboard.TargetProperty="IsOpen"
                                                                        FillBehavior="HoldEnd">
                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0.25"
                                                                     Value="False" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger SourceName="VolumePanel"
                                 Property="IsMouseOver"
                                 Value="False">
                            <Setter TargetName="VolumePopup"
                                    Property="IsOpen"
                                    Value="False" />
                        </Trigger>
                        <Trigger SourceName="SeekBarSlider"
                                 Property="ThumbIsDragging"
                                 Value="True">
                            <Setter Property="IsSyncing"
                                    Value="False" />
                        </Trigger>
                        <Trigger SourceName="SeekBarSlider"
                                 Property="ThumbIsDragging"
                                 Value="false">
                            <Setter Property="IsSyncing"
                                    Value="True" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>