<ResourceDictionary x:Class="DesktopApp.Themes.ThemeDictionary"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Color x:Key="MainBgColor">#FF0A8CE0</Color>
    <SolidColorBrush x:Key="MainBgBrush"
                     Color="{StaticResource MainBgColor}" />
    <Color x:Key="FocusBgColor">#FF0077C5</Color>
    <SolidColorBrush x:Key="FocusBgBrush"
                     Color="{StaticResource FocusBgColor}" />
    <Color x:Key="FocusFgColor">#FFFEFF7B</Color>
    <SolidColorBrush x:Key="FocusFgBrush"
                     Color="{StaticResource FocusFgColor}" />
    <Color x:Key="BarBgColor">#F0F0F0</Color>
    <SolidColorBrush x:Key="BarBgBrush"
                     Color="{StaticResource BarBgColor}" />
    <Color x:Key="MainBorderColor">#055BAD</Color>
    <SolidColorBrush x:Key="MainBorderBrush"
                     Color="{StaticResource MainBorderColor}" />

    <!-- 文本前景色 -->
    <Color x:Key="CustomTextForegroundColor">#FF333333</Color>
    <SolidColorBrush x:Key="CustomTextForegroundBrush"
                     Color="{StaticResource CustomTextForegroundColor}" />
    <!-- 前景色 -->
    <Color x:Key="CustomForegroundColor">#FF0767BE</Color>
    <SolidColorBrush x:Key="CustomForegroundBrush"
                     Color="{StaticResource CustomForegroundColor}" />
    <!-- 背景色 -->
    <!--<Color x:Key="CustomBackgroundColor">#FFFEFEFE</Color>
    <SolidColorBrush x:Key="CustomBackgroundBrush" Color="{StaticResource CustomBackgroundColor}"/>-->
    <!-- 文本高亮前景色 -->
    <Color x:Key="CustomTextHighlightColor">#FFF57A12</Color>
    <SolidColorBrush x:Key="CustomTextHighlightBrush"
                     Color="{StaticResource CustomTextHighlightColor}" />
    <Color x:Key="CustomWarningColor">#FFFF0000</Color>
    <SolidColorBrush x:Key="CustomWarningBrush"
                     Color="{StaticResource CustomWarningColor}" />
    <!--<Color x:Key="CustomLodingMaskColor">#99FFFFFF</Color>-->
    <Color x:Key="CustomgGridFirstCellColor">#EBF7FF</Color>
    <SolidColorBrush x:Key="CustomgGridFirstCellBrush"
                     Color="{StaticResource CustomgGridFirstCellColor}" />
    <!--播放界面时间文本颜色-->
    <Color x:Key="CustomgPlayTimeColor">#FFFFFF</Color>
    <SolidColorBrush x:Key="CustomgPlayTimeBrush"
                     Color="{StaticResource CustomgPlayTimeColor}" />
    <Color x:Key="CustomPlaySplitBackgroundColor">#A7D8FF</Color>
    <SolidColorBrush x:Key="CustomPlaySplitBackgroundBrush"
                     Color="{StaticResource CustomPlaySplitBackgroundColor}" />

    <Color x:Key="CustomgNormalBtnHoverColor">#DD1567B2</Color>
    <SolidColorBrush x:Key="CustomgNormalBtnHoverBrush"
                     Color="{StaticResource CustomgNormalBtnHoverColor}" />

    <Style x:Key="PageTitleStyle"
           TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground"
                Value="{StaticResource CustomTextHighlightBrush}" />
        <Setter Property="Margin"
                Value="20,0,0,0" />
        <Setter Property="FontSize"
                Value="17" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>

    <Style x:Key="PlayWindowTitleStyle"
           TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground"
                Value="{StaticResource CustomTextHighlightBrush}" />
        <Setter Property="Margin"
                Value="20,0,0,0" />
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>

    <Style x:Key="LinkTextStyle"
           TargetType="TextBlock">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="Foreground"
                Value="{StaticResource CustomForegroundBrush}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter Property="TextDecorations"
                        Value="Underline" />
                <Setter Property="Foreground"
                        Value="{StaticResource CustomTextHighlightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--CheckBox的样式-->
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator FlowDirection="LeftToRight"
                                     VerticalAlignment="Center">
                        <BulletDecorator.Bullet>
                            <Image x:Name="ImgChk"
                                   Source="/Images/Chapter/chk_unselect.png"
                                   Height="17" />
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="12,0" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="ImgChk"
                                    Property="Source"
                                    Value="/Images/Chapter/chk_select.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--设置界面按钮样式-->

    <Style x:Key="LogoutBtnStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="#C53127" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="FontSize"
                Value="15" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="4"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter"
                                              Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#E04343" />
                            <Setter Property="Foreground"
                                    Value="White" />
                        </Trigger>

                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#C53127" />
                            <Setter Property="Foreground"
                                    Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NormalBtnStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="{StaticResource CustomForegroundBrush}" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="FontSize"
                Value="15" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="4"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter"
                                              Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource CustomgNormalBtnHoverBrush}" />
                            <Setter Property="Foreground"
                                    Value="White" />
                        </Trigger>

                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource CustomForegroundBrush}" />
                            <Setter Property="Foreground"
                                    Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BigButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="#4cc122" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="MyContentPresenter"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="0,0,0,0" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#FF58ca2f" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="#FFADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SmallButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="{StaticResource MainBgBrush}" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="MyContentPresenter"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="0,0,0,0" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#FF239be8" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource CustomForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="#FFc5c5c5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SmallPlayButtonStyle"
           TargetType="Button">
        <Setter Property="Background"
                Value="#F57F0C" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="MyContentPresenter"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="0,0,0,0" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#EB620F" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#E54D03" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="#FFc5c5c5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CancelButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="#FFee991f" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="MyContentPresenter"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="0,0,0,0" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#DDee991f" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="#FFc5c5c5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlayerMenuButtonStyle"
           TargetType="Button">
        <Setter Property="Background"
                Value="#434343" />
        <Setter Property="Foreground"
                Value="#FFFFFF" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="8"
                            Background="{TemplateBinding Background}"
                            Padding="8,4,8,4"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#6C6C6C" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#6C6C6C" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="#FFc5c5c5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
